{"version":3,"file":"2-snackbar-d853068a.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('form'); //Елемент форми\n\nform.addEventListener('submit', (event) => {  // Обробка події сабміту форми\n    event.preventDefault(); // Щоб сторінка не перезавантажувалась\n\n    const delay =  parseInt(document.querySelector('input[name=\"delay\"]').value); // Отримуємо значення затримки\n    \n    form.delay.value = undefined; //Очищення значення поля затримки\n\n    const promise = new Promise((resolve, reject) => {     // Створюємо новий проміс\n        setTimeout(() => { //Встановлення таймауту\n            if (form.state.value == 'fulfilled'){\n                resolve(delay); //resolve\n            }\n            else{\n                reject(delay);  //reject\n            }\n        }, delay);\n    });\n\n    //Обробка результату промісу\n    promise\n    .then(delay => {\n      iziToast.success({\n            icon: null,\n            message: `✅ Fulfilled promise in ${delay}ms`, // Повідомлення при вдалому виконанні промісу\n            position: 'topRight',\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n            icon: null,\n            message: `❌ Rejected promise in ${delay}ms`, // Повідомлення при вдалому виконанні промісу\n            position: 'topRight',\n      });\n    });\n\n        \n//   const promise = new Promise((resolve, reject) => {     // Створюємо новий проміс\n//     if (document.getElementById('fulfilled').checked) {\n//       setTimeout(() => {\n//         resolve(delay); // Виконуємо проміс після затримки delay мілісекунд\n//       }, delay);\n//     } else if (document.getElementById('rejected').checked) {\n//       setTimeout(() => {\n//         reject(delay); // Відхиляємо проміс після затримки delay мілісекунд\n//       }, delay);\n//     } else {\n//       reject('No option selected');\n//     }\n  });\n\n\n\n \n//   promise      // Обробляємо результати промісу\n//     .then((value) => {\n//         iziToast.success({\n//             title: 'OK',\n//             message: `✅ Fulfilled promise in ${delay}ms`, // Повідомлення при вдалому виконанні промісу\n//             position: 'topRight',\n//         });\n        \n//     })\n//     .catch((value) => {\n//         iziToast.error({\n//             title: 'Error',\n//             message: `❌ Rejected promise in ${delay}ms`, // Повідомлення при вдалому виконанні промісу\n//             position: 'topRight',\n//         });\n      \n//     });\n// });\n\n//form.addEventListener('submit', createPromise);"],"names":["form","event","delay","resolve","reject","iziToast"],"mappings":"yCAIA,MAAMA,EAAO,SAAS,cAAc,MAAM,EAE1CA,EAAK,iBAAiB,SAAWC,GAAU,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAS,SAAS,SAAS,cAAc,qBAAqB,EAAE,KAAK,EAE3EF,EAAK,MAAM,MAAQ,OAEH,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTJ,EAAK,MAAM,OAAS,YACpBG,EAAQD,CAAK,EAGbE,EAAOF,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAIA,KAAKA,GAAS,CACbG,EAAS,QAAQ,CACX,KAAM,KACN,QAAS,0BAA0BH,CAAK,KACxC,SAAU,UACtB,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdG,EAAS,MAAM,CACT,KAAM,KACN,QAAS,yBAAyBH,CAAK,KACvC,SAAU,UACtB,CAAO,CACP,CAAK,CAeL,CAAG"}